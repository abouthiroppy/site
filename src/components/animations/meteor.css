@import "../variables.css";

/*
  postcss-forの中でpostcss-customしても展開されない(一回目の展開しかされない)
  :rootでダメそうなので、sass式にした advanced-variables
  なお、advanced-variablesを使っても、同じスコープ内で同じ変数を参照してもrandomは参照ごとに更新される
*/

.meteor {
  position: absolute;
  width: 3px;
}

.meteor1 {
  background: linear-gradient(to top, rgba(255, 255, 255, 0) 0%, var(--color-white) 100%);
  height: 300px;
  composes: meteor;
}

.meteor2 {
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, var(--color-white) 100%);
  height: 50px;
  composes: meteor;
}

/* meteor-1 */
@for $i from 1 to 5 {
  $delay: random(0, 30)s;
  $left: calc(random(0, 100)%);
  $opacity: calc((random(0, 30) + 30) * .01);
  $top: calc(random(0, 60)%);

  .meteor1Wrapper:nth-of-type($(i)) {
    position: absolute;
    left: $(left);
    top: $(top);
    transform: rotate(random(0, 360)deg);

    & > .meteor1:global {
      animation-name: meteor-1-$(i);
      animation-delay: $delay;
      transition-timing-function: ease-in;
      animation-duration: calc(random(0, 10)s + 20s);
      animation-iteration-count: infinite;
      opacity: 0;
    }
  }

  @Keyframes meteor-1-$(i) {
    from {
      transform: scale(0) translate3d(0, 0, 0);
    }

    1% {
      opacity: $opacity;
    }

    5% {
      transform: scale(1) translate3d(0, 0, 0);
    }

    10% {
      opacity: 0;
    }

    to {
      opacity: 0;
    }
  }
}

/* meteor-2 */
@for $i from 1 to 5 {
  $delay: random(0, 30)s;
  $left: calc(random(0, 100)%);
  $opacity: calc((random(0, 30) + 30) * .01);
  $top: calc(random(0, 70)%);

  .meteor2:nth-of-type($(i)):global {
    animation-name: meteor-2-$(i);
    animation-delay: $delay;
    animation-duration: calc(random(0, 10)s + 30s);
    animation-iteration-count: infinite;
    left: $(left);
    opacity: 0;
    top: $(top);
  }

  @Keyframes meteor-2-$(i) {
    from {
      transform: rotate(0deg) translateX(150px);
    }

    1% {
      opacity: $opacity;
    }

    10% {
      opacity: 0;
      transform: rotate(random(0, 120)deg) translateX(150px);
    }

    to {
      opacity: 0;
    }
  }
}
